{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kkbo5\\\\Desktop\\\\React_with_Django\\\\reactfrontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport api from './api';\nimport PostView from './Components/PostView'; // Material-UI\n\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlingChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handlingSubmit = async event => {\n      // event 고유의 기능을 막는다 (ex.새로고침 막아줌)\n      event.preventDefault();\n      let result = await api.createPost({\n        title: this.state.title,\n        content: this.state.content\n      });\n      console.log(\"완료되었습니다!\", result);\n      this.setState({\n        title: '',\n        content: ''\n      });\n      this.getPosts();\n    };\n\n    this.handlingDelete = async event => {\n      await api.deletePost(event.target.value);\n      this.getPosts();\n    };\n\n    this.state = {\n      title: '',\n      content: '',\n      results: []\n    };\n  } // ComponentDidMount: 직후에 component 데이터 요청을 하는 것이 좋다.\n\n\n  componentDidMount() {\n    this.getPosts();\n  } // 앞의 _: input을 의미\n\n\n  async getPosts() {\n    const _results = await api.getAllPosts(); //_results.data: 아무것도 없음\n\n\n    this.setState({\n      results: _results.data\n    });\n    console.log(_results);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"PostingSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: \"PostingPaper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"\\uB300\\uB098\\uBB34\\uC232 \\uAE00 \\uC791\\uC131\\uD558\\uAE30\"), React.createElement(\"form\", {\n      className: \"PostingForm\",\n      onSubmit: this.handlingSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      className: 'TextTitle',\n      id: \"outlined-name\",\n      label: \"title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handlingChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"outlined-name\",\n      label: \"content\",\n      name: \"content\",\n      className: 'TextContent',\n      multiline: true,\n      rows: \"4\",\n      value: this.state.content,\n      onChange: this.handlingChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"\\uC81C\\uCD9C\\uD558\\uAE30\")))), React.createElement(\"div\", {\n      className: \"ViewSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.results.map(post => React.createElement(Card, {\n      className: 'card',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(PostView, {\n      key: post.id,\n      id: post.id,\n      title: post.title,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      size: \"small\",\n      value: post.id,\n      onClick: this.handlingDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"\\uC0AD\\uC81C\\uD558\\uAE30\")))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/kkbo5/Desktop/React_with_Django/reactfrontend/src/App.js"],"names":["React","api","PostView","Container","Paper","TextField","Button","Card","CardActions","CardContent","Typography","App","Component","constructor","props","handlingChange","event","setState","target","name","value","handlingSubmit","preventDefault","result","createPost","title","state","content","console","log","getPosts","handlingDelete","deletePost","results","componentDidMount","_results","getAllPosts","data","render","map","post","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport api from './api';\nimport PostView from './Components/PostView'\n\n// Material-UI\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      title: '',\n      content: '',\n      results: [],\n    }\n  }\n\n  // ComponentDidMount: 직후에 component 데이터 요청을 하는 것이 좋다.\n  componentDidMount() {\n    this.getPosts()\n\n  }\n\n  // 앞의 _: input을 의미\n  async getPosts() {\n    const _results = await api.getAllPosts()\n    //_results.data: 아무것도 없음\n    this.setState({results: _results.data})\n    console.log(_results)\n  }\n\n\n\n  handlingChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  handlingSubmit = async (event) => {\n    // event 고유의 기능을 막는다 (ex.새로고침 막아줌)\n    event.preventDefault()\n    let result = await api.createPost({title:this.state.title, content:this.state.content})\n    console.log(\"완료되었습니다!\", result)\n    this.setState({title: '', content: ''})\n    this.getPosts()\n  }\n\n  handlingDelete = async (event) => {\n    await api.deletePost(event.target.value)\n    this.getPosts()\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container maxWidth=\"lg\">\n          <div className=\"PostingSection\">\n            <Paper className=\"PostingPaper\">\n              <h2>대나무숲 글 작성하기</h2>\n              <form className=\"PostingForm\" onSubmit={this.handlingSubmit}>\n                <TextField\n                className={'TextTitle'}\n                id=\"outlined-name\"\n                label=\"title\"\n                name=\"title\"\n                value={this.state.title}\n                onChange={this.handlingChange}\n                variant=\"outlined\"\n                />\n\n                <TextField\n                id=\"outlined-name\"\n                label=\"content\"\n                name=\"content\"\n                className={'TextContent'}\n                multiline\n                rows=\"4\"\n                value={this.state.content}\n                onChange={this.handlingChange}\n                variant=\"outlined\"\n                />\n\n                <Button variant=\"outlined\" color=\"primary\" type=\"submit\">제출하기</Button>\n              </form>\n            </Paper>\n          </div>\n          <div className=\"ViewSection\">\n            {\n              this.state.results.map((post) =>\n                <Card className={'card'}>\n                      <CardContent>\n                        <Typography>\n                          <PostView key={post.id} id={post.id} title={post.title} content={post.content}/>\n                        </Typography>\n                      </CardContent>\n                      <CardActions>\n                        <Button color=\"secondary\" size=\"small\" value={post.id} onClick={this.handlingDelete}>삭제하기</Button>\n                      </CardActions>\n                    </Card>\n\n              )\n            }\n          </div>\n        </Container>\n      </div>\n    );\n  }\n  }\n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}