{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kkbo5\\\\Desktop\\\\React_with_Django\\\\reactfrontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport api from './api';\nimport PostView from './Components/PostView';\nimport Container from '@material-ui/core/Container';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlingChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handlingSubmit = async event => {\n      // event 고유의 기능을 막는다 (ex.새로고침 막아줌)\n      event.preventDefault();\n      let result = await api.createPost({\n        title: this.state.title,\n        content: this.state.content\n      });\n      console.log(\"완료되었습니다!\", result);\n      this.setState({\n        title: '',\n        content: ''\n      });\n      this.getPosts();\n    };\n\n    this.handlingDelete = async event => {\n      await api.deletePost(event.target.value);\n      this.getPosts();\n    };\n\n    this.state = {\n      title: '',\n      content: '',\n      results: []\n    };\n  } // ComponentDidMount: 직후에 component 데이터 요청을 하는 것이 좋다.\n\n\n  componentDidMount() {\n    this.getPosts();\n  } // 앞의 _: input을 의미\n\n\n  async getPosts() {\n    const _results = await api.getAllPosts(); //_results.data: 아무것도 없음\n\n\n    this.setState({\n      results: _results.data\n    });\n    console.log(_results);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"PostingSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\uB300\\uB098\\uBB34\\uC232 \\uAE00 \\uC791\\uC131\\uD558\\uAE30\"), React.createElement(\"form\", {\n      onSubmit: this.handlingSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handlingChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      name: \"content\",\n      value: this.state.content,\n      onChange: this.handlingChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"\\uC81C\\uCD9C\\uD558\\uAE30\"))), React.createElement(\"div\", {\n      className: \"ViewSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.results.map(post => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(PostView, {\n      key: post.id,\n      id: post.id,\n      title: post.title,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      value: post.id,\n      onClick: this.handlingDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"\\uC0AD\\uC81C\\uD558\\uAE30\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/kkbo5/Desktop/React_with_Django/reactfrontend/src/App.js"],"names":["React","api","PostView","Container","App","Component","constructor","props","handlingChange","event","setState","target","name","value","handlingSubmit","preventDefault","result","createPost","title","state","content","console","log","getPosts","handlingDelete","deletePost","results","componentDidMount","_results","getAllPosts","data","render","map","post","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport api from './api';\nimport PostView from './Components/PostView'\nimport Container from '@material-ui/core/Container';\n\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      title: '',\n      content: '',\n      results: [],\n    }\n  }\n\n  // ComponentDidMount: 직후에 component 데이터 요청을 하는 것이 좋다.\n  componentDidMount() {\n    this.getPosts()\n\n  }\n\n  // 앞의 _: input을 의미\n  async getPosts() {\n    const _results = await api.getAllPosts()\n    //_results.data: 아무것도 없음\n    this.setState({results: _results.data})\n    console.log(_results)\n  }\n\n\n\n  handlingChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  handlingSubmit = async (event) => {\n    // event 고유의 기능을 막는다 (ex.새로고침 막아줌)\n    event.preventDefault()\n    let result = await api.createPost({title:this.state.title, content:this.state.content})\n    console.log(\"완료되었습니다!\", result)\n    this.setState({title: '', content: ''})\n    this.getPosts()\n  }\n\n  handlingDelete = async (event) => {\n    await api.deletePost(event.target.value)\n    this.getPosts()\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container maxWidth=\"sm\">\n          <div className=\"PostingSection\">\n            <h2>대나무숲 글 작성하기</h2>\n            <form onSubmit={this.handlingSubmit}>\n              <input\n                name=\"title\"\n                value={this.state.title}\n                onChange={this.handlingChange}\n              />\n              <textarea\n                name=\"content\"\n                value={this.state.content}\n                onChange={this.handlingChange}\n              />\n              <button type=\"submit\">제출하기</button>\n            </form>\n          </div>\n          <div className=\"ViewSection\">\n            {\n              this.state.results.map((post) =>\n              <div>\n                <PostView key={post.id} id={post.id} title={post.title} content={post.content}/>\n                <button value={post.id} onClick={this.handlingDelete}>삭제하기</button>\n              </div>\n              )\n            }\n          </div>\n        </Container>\n      </div>\n    );\n  }\n  }\n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}